{"version":3,"sources":["styles/h1.js","components/ProjectTitle.tsx","components/ScoreBoard.tsx","components/Loading.tsx","components/CongratulationMsg.tsx","components/StyledImg.tsx","helper/shuffle.js","imgSources.js","App.tsx","index.js"],"names":["Heading1","styled","h1","props","spotify","h2","ProjectTitle","title","className","ScoreBoard","scores","score","bestScore","Loading","level","CongratulationMsg","remainingSeconds","StyledImg","img","shuffle","array","t","i","shuffledArray","m","length","Math","floor","random","imgSources","Album","src","onClickHandler","onClick","Cards","cards","map","card","imgSrc","e","id","Header","Main","div","App","useState","setScore","setBestScore","allCards","setAllCards","setLevel","setCards","isLoading","setIsLoading","isDone","setIsDone","setRemainingSeconds","useEffect","allImgSources","a","imgSource","uuidv4","clicked","console","log","fetchData","shuffledCards","slice","every","prevLevel","setTimeout","timerId","setInterval","prevSeconds","restartGame","clearInterval","clickedCard","find","resetGame","newCards","prevScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4df0719.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Heading1 = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${props => props.spotify ? \"#1db954\" : \"#fff\"};\n} `\n\nexport const Heading2 = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: #1db954;\n}`\n\n\n\n\n","import { Heading1 } from \"../styles/h1\";\n\ntype ProjectTitleProps = {\n  title: string;\n};\n\nfunction ProjectTitle(props: ProjectTitleProps) {\n  const { title } = props;\n\n  return (\n    <div className=\"title\">\n      <Heading1>{title}</Heading1>\n    </div>\n  );\n}\n\nexport default ProjectTitle;\n","import { Scores } from \"../types/spotifyType\";\n\ntype ScoreBoardProps = {\n  scores: Scores;\n};\n\nfunction ScoreBoard(props: ScoreBoardProps) {\n  return (\n    <div className=\"score-board\">\n      <div>Score: {props.scores.score}</div>\n      <div>Best: {props.scores.bestScore}</div>\n    </div>\n  );\n}\n\nexport default ScoreBoard;\n","import React from \"react\";\n\ntype LoadingProps = {\n  level: number;\n};\n\nfunction Loading(props: LoadingProps) {\n  return (\n    <div className=\"loading\">\n      <h1>Loading Lv{props.level}</h1>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\n\nfunction CongratulationMsg(props: any): JSX.Element {\n  return (\n    <div className=\"congratulation\">\n      <h1>WOWZA!!!</h1>\n      <h1>YOU HAVE A GREAT MEMORY!</h1>\n      <h1>Restarting in {props.remainingSeconds} seconds...</h1>\n    </div>\n  );\n}\n\nexport default CongratulationMsg;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledImg = styled.img`\n  width: 200px;\n  height: 200px;\n  border-radius: 0.5rem;\n  box-shadow: 0.3rem 0.3rem 0.5rem 0.1rem rgba(0, 0, 0, 0.45);\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport { StyledImg };\n","function shuffle(array) {\n  const shuffledArray = [...array];\n\n  var m = shuffledArray.length,\n    t,\n    i;\n\n  // While there remain elements to shuffle…\n  while (m) {\n    // Pick a remaining element…\n    i = Math.floor(Math.random() * m--);\n\n    // And swap it with the current element.\n    t = shuffledArray[m];\n    shuffledArray[m] = shuffledArray[i];\n    shuffledArray[i] = t;\n  }\n\n  return shuffledArray;\n}\n\nexport { shuffle };\n","const imgSources = [\n  \"https://i.scdn.co/image/ab67616d0000b273a2df18ac09a56166a5ed4ecb\",\n  \"https://i.scdn.co/image/ab67616d0000b27357b703060f763bf2d0a140d1\",\n  \"https://i.scdn.co/image/ab67616d0000b273daf7982ccaad9ca5e1603792\",\n  \"https://i.scdn.co/image/ab67616d0000b2733b2a32bfe8eb5e798a355b17\",\n  \"https://i.scdn.co/image/ab67616d0000b2735f9608114e13bb4e5e6b0399\",\n  \"https://i.scdn.co/image/ab67616d0000b2734a6d5da9e8c6bb38a2e62f6f\",\n  \"https://i.scdn.co/image/ab67616d0000b27332ba888c8c9b19cca68ca58d\",\n  \"https://i.scdn.co/image/ab67616d0000b2739633cfd2e42a610f3dafa801\",\n  \"https://i.scdn.co/image/ab67616d0000b27375c7a650fd82c52dc7746267\",\n  \"https://i.scdn.co/image/ab67616d0000b2730a4449bb83bbfccfab5c0c3a\",\n  \"https://i.scdn.co/image/ab67616d0000b2737ac73c439819e81f544cc023\",\n  \"https://i.scdn.co/image/ab67616d0000b273e09cf2e27583bc4ad22269f2\",\n  \"https://i.scdn.co/image/ab67616d0000b273e93846f5423feb3d0961fab1\",\n  \"https://i.scdn.co/image/ab67616d0000b2739abe2ff421191addd871b98a\",\n  \"https://i.scdn.co/image/ab67616d0000b273a7fcbfdd783b559de31d181b\",\n  \"https://i.scdn.co/image/ab67616d0000b273e7ef3c292ad04a42a708fee0\",\n  \"https://i.scdn.co/image/ab67616d0000b27395768aaeb6607d53450a527b\",\n  \"https://i.scdn.co/image/ab67616d0000b2735c041fe9e3c9de436047d86b\",\n  \"https://i.scdn.co/image/ab67616d0000b2732bf83c1a01156fb93b564160\",\n  \"https://i.scdn.co/image/ab67616d0000b2734b378770cd6b77e86f8a6288\",\n];\n\nexport { imgSources };\n","import { Scores, Card } from \"./types/spotifyType\";\n\nimport ProjectTitle from \"./components/ProjectTitle\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport Loading from \"./components/Loading\";\nimport RestartMsg from \"./components/RestartMsg\";\nimport CongratulationMsg from \"./components/CongratulationMsg\";\nimport \"./styles/style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport getSpotify from \"./api/spotify\";\nimport styled from \"styled-components\";\nimport { StyledImg } from \"./components/StyledImg\";\nimport { shuffle } from \"./helper/shuffle\";\nimport { imgSources } from \"./imgSources\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\ntype AlbumProps = {\n  src: string;\n  onClickHandler: (event: React.MouseEvent<HTMLImageElement>) => void;\n};\n\nconst Album = ({ src, onClickHandler }: AlbumProps): JSX.Element => {\n  return <StyledImg src={src} onClick={onClickHandler} />;\n};\n\nconst App = (): JSX.Element => {\n  const [score, setScore] = useState<number>(0);\n  const [bestScore, setBestScore] = useState<number>(0);\n  const [allCards, setAllCards] = useState<[] | Card[]>([]);\n  const [level, setLevel] = useState(1);\n  const [cards, setCards] = useState<[] | Card[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isDone, setIsDone] = useState<boolean>(false);\n  const [remainingSeconds, setRemainingSeconds] = useState(5);\n\n  useEffect(() => {\n    let allImgSources: any = [];\n    const fetchData = async () => {\n      // const allCards: string[] = await getSpotify();\n      const cards = imgSources.map((imgSource): Card => {\n        return {\n          id: uuidv4(),\n          imgSrc: imgSource,\n          clicked: false,\n        };\n      });\n\n      console.log(allImgSources);\n      setAllCards(cards);\n    };\n\n    fetchData();\n  }, []); // By passing array, we are making sure to run it only mounted\n\n  useEffect(() => {\n    const shuffledCards: Card[] = shuffle(allCards);\n\n    switch (level) {\n      case 1:\n        setCards(shuffledCards.slice(0, 2));\n        break;\n      case 2:\n        setIsLoading(true);\n        setCards(shuffledCards.slice(0, 4));\n        break;\n      case 3:\n        setIsLoading(true);\n        setCards(shuffledCards.slice(0, 6));\n        break;\n      default:\n        setIsDone(true);\n        break;\n    }\n  }, [level, allCards]);\n\n  useEffect(() => {\n    // if all cards ard clicked, go to the next level\n    if (cards.length !== 0) {\n      const areAllCardsClicked = cards.every((card) => card.clicked);\n      if (areAllCardsClicked) {\n        setLevel((prevLevel: number) => prevLevel + 1);\n      }\n    }\n  }, [cards]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 2000);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (isDone) {\n      const timerId = setInterval(() => {\n        setRemainingSeconds((prevSeconds) => prevSeconds - 1);\n      }, 1000);\n\n      setTimeout(() => {\n        setIsDone(false);\n        restartGame();\n        clearInterval(timerId);\n      }, 5000);\n    }\n  }, [isDone]);\n\n  const resetGame = () => {\n    setLevel(1);\n    setScore(0);\n    const shuffledCards = shuffle(allCards);\n    setCards(shuffledCards.slice(0, 2));\n  };\n\n  const restartGame = () => {\n    // Show Congratulation Message for 3 seconds\n    setLevel(1);\n    setScore(0);\n    setBestScore(0);\n  };\n\n  const onClickHandler = (e: React.MouseEvent, id: string) => {\n    const clickedCard = cards.find((card: Card) => card.id === id);\n    if (clickedCard?.clicked === true) {\n      return resetGame();\n    }\n\n    const newCards = cards.map((card: Card) =>\n      card.id === id ? { ...card, clicked: !card.clicked } : card\n    );\n\n    setCards(shuffle(newCards));\n    setScore((prevScore) => {\n      return prevScore + 1;\n    });\n    if (score >= bestScore) {\n      setBestScore((bestScore) => bestScore + 1);\n    }\n  };\n\n  return (\n    <div>\n      <Header scores={{ score, bestScore }} />\n      {/* <Main>{!isLoading && Cards}</Main> */}\n      <Main>\n        {!isLoading && !isDone && (\n          <Cards cards={cards} onClickHandler={onClickHandler} />\n        )}\n      </Main>\n      {isLoading ? <Loading level={level} /> : null}\n      {isDone ? (\n        <CongratulationMsg remainingSeconds={remainingSeconds} />\n      ) : null}\n    </div>\n  );\n};\n\ntype CardsProps = {\n  cards: Card[];\n  onClickHandler: (e: React.MouseEvent, id: string) => void;\n};\n\nconst Cards = ({ cards, onClickHandler }: CardsProps) => {\n  return (\n    <div className=\"cards\">\n      {cards.map((card: Card) => (\n        <Album\n          key={card.id}\n          src={card.imgSrc}\n          onClickHandler={(e) => onClickHandler(e, card.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\ntype HeaderProps = {\n  scores: Scores;\n};\n\nconst Header = (props: HeaderProps): JSX.Element => {\n  return (\n    <header className=\"header\">\n      <ProjectTitle title=\"K-POP Memory Game\" />\n      <ScoreBoard scores={props.scores} />\n    </header>\n  );\n};\n\nconst Main = styled.div`\n  .cards {\n    padding: 2rem;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 200px);\n    column-gap: 2rem;\n    row-gap: 2rem;\n  }\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}